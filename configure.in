dnl Process this file with 'autoconf' to produce a 'configure' script
dnl $Id: configure.in,v 1.4 1995/12/26 21:47:50 tom Exp $
AC_REVISION($Revision: 1.4 $)
AC_INIT(add.c)

AC_ARG_WITH(debugging,
[  --with-debugging        turn on gcc debug-flag ],
[CFLAGS="$CFLAGS -g"],
[CFLAGS="$CFLAGS -O"])

AC_PROG_CC
AC_PROG_INSTALL
AC_C_CONST

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(INCLUDES)
AC_SUBST(DEFINES)
AC_SUBST(LIBS)

AC_HEADER_STDC
AC_CHECK_HEADERS(\
getopt.h \
stdlib.h \
string.h \
unistd.h \
)

AC_ARG_WITH(warnings,
[  --with-warnings         turn on gcc warnings, for debugging ],[
if test -n "$GCC"
then
CFLAGS='-O -Wall -Wshadow -Wconversion -Wstrict-prototypes -Wmissing-prototypes'
fi
])

AC_ARG_WITH(ncurses,
[  --with-ncurses          compile/link with ncurses library],
[	AC_CHECK_LIB(ncurses,_tracef,
	[	LIBS="$LIBS -lncurses"
		for p in /usr/include/ncurses /usr/local/include/ncurses
		do
			if test -d $p
			then
				CPPFLAGS="$CPPFLAGS -I$p"
				AC_MSG_RESULT(have $p)
				break
			fi
		done
		],
		[echo 'Cannot find ncurses library'
		 exit 1])],
[LIBS="$LIBS -lcurses"])

AC_ARG_WITH(dbmalloc,
[  --with-dbmalloc         compile/link with dbmalloc if found],
[	AC_CHECK_HEADER(dbmalloc.h,
	[	AC_CHECK_LIB(dbmalloc,dbmallopt,
		[	AC_DEFINE(HAVE_DBMALLOC_H)
			LIBS="$LIBS -ldbmalloc"])])])

AC_TYPE_SIZE_T

AC_MSG_CHECKING(declaration of chtype)
AC_CACHE_VAL(ac_have_type_chtype,[
	AC_TRY_COMPILE([#include <curses.h>],
		[chtype x = 1],
		[ac_have_type_chtype=yes],
		[ac_have_type_chtype=no])])
AC_MSG_RESULT($ac_have_type_chtype)
test $ac_have_type_chtype = no && AC_DEFINE(chtype,int)

AC_CHECK_FUNCS(\
beep \
bkgd \
flash \
getcwd \
getopt \
keypad \
typeahead \
)

###	output makefile and config.h
changequote({,})dnl
AC_OUTPUT(makefile config_h,
{
echo creating config.h
sed	-e '/^# /d' \
	-e 's/ -D/\
#define /g' \
	-e 's/\(#define [A-Za-z_][A-Za-z0-9_]*\)=/\1	/g' \
	config_h >config.h
}
echo removing config_h
rm config_h
)
changequote([,])dnl
